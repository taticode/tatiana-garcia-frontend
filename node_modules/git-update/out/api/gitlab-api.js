"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var logger_1 = require("../logger");
var Gitlab = require("gitlab");
var utils_1 = require("../utils");
var ApiConfig_1 = require("../model/ApiConfig");
var GitlabApi = (function () {
    function GitlabApi(program) {
        var namespaces = program.namespace.split(",").map(function (s) { return s.trim(); });
        this.config = new ApiConfig_1.default({
            dir: program.dir, url: program.url || "https://gitlab.com", namespaces: namespaces, token: program.token
        });
        this.gitlab = Gitlab({
            url: this.config.url,
            token: this.config.token,
        });
        // console.log("config", config)
    }
    GitlabApi.prototype.listRepositories = function (cb) {
        var _this = this;
        if (cb === void 0) { cb = null; }
        this.gitlab.projects.all(function (projects) {
            var repos = projects.map(function (project) {
                var _a = project.path_with_namespace.split("/"), ns = _a[0], name = _a[1];
                var ssh_path = project.ssh_url_to_repo;
                // console.log(ns, name, ssh_path)
                if (_this.config.namespaces.indexOf(ns) !== -1) {
                    return { name: name, namespace: ns, link: ssh_path };
                    // content[name] = ssh_path
                    // return content;
                }
                return {};
            }).filter(function (p) { return p['name'] !== undefined; });
            if (cb) {
                cb(repos);
            }
            else {
                logger_1.default.debug("total projects: ", repos.length);
                repos.map(function (r) { return console.log(r.namespace + "/" + r.name); });
            }
        });
    };
    GitlabApi.prototype.cloneOrUpdateRepositories = function () {
        var _this = this;
        this.listRepositories(function (repos) {
            // console.log(repos)
            utils_1.cloneProjects(repos, { dir: _this.config.dir });
        });
    };
    return GitlabApi;
}());
exports.GitlabApi = GitlabApi;
